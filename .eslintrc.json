{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "extends": [
    "eslint:all",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:@typescript-eslint/strict-type-checked",
    "prettier"
  ],
  "parserOptions": {
    "project": ["tsconfig.json"]
  },
  "ignorePatterns": [
    "node_modules",
    "*.config.js",
    "*.config.ts",
    "next-env.d.ts",
    "out",
    "dist",
    ".next",
    ".turbo",
    "examples",
    "coverage",
    ".changeset",
    "playwright-report",
    "*.mock.ts",
    "*.test.ts"
  ],
  "rules": {
    // Core
    "func-style": ["error", "declaration"],
    "newline-before-return": "error",
    "one-var": ["error", "never"],
    "no-console": ["error", { "allow": ["warn"] }],
    "curly": "error",
    "sort-imports": "off",
    "sort-keys": "off",
    "camelcase": "off",
    "no-ternary": "off",
    "no-duplicate-imports": "off",
    "max-lines-per-function": "off",
    "max-statements": "off",
    "no-undefined": "off",
    "prefer-destructuring": "off",
    "class-methods-use-this": "off",
    "id-length": "off",
    "max-lines": "off",
    "no-async-promise-executor": "off",
    "no-underscore-dangle": "off",
    "no-undef-init": "off",
    "complexity": "off",
    "no-magic-numbers": "off",
    "no-use-before-define": "off",
    "require-atomic-updates": "off",
    "no-bitwise": "off",
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "lit/decorators.js",
            "importNames": ["customElement"],
            "message": "Use import 'customElement' from '@reown/appkit-ui' instead."
          }
        ]
      }
    ],

    // Typescript
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/no-magic-numbers": "off",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-type-alias": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-require-imports": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-extraneous-class": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/promise-function-async": "off",
    "@typescript-eslint/no-confusing-void-expression": "off",
    "@typescript-eslint/prefer-nullish-coalescing": "off",
    "@typescript-eslint/no-unnecessary-condition": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/non-nullable-type-assertion-style": "off",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["camelCase", "UPPER_CASE", "PascalCase"],
        "prefix": ["is", "has", "can", "should", "will", "did"]
      }
    ]
  }
}
