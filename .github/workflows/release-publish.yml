name: Publish release & PR back to main

on:
  push:
    branches:
      - 'release/**'

jobs:
  release:
    name: Publish release & PR back to main
    permissions:
      contents: write
      id-token: write
      pull-requests: write
      attestations: write
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Only run on push events to release branches, skip PR events and "back to main" merges
    if: ${{ github.event_name == 'push' && !(contains(github.event.head_commit.message, 'Merge release/') && contains(github.event.head_commit.message, 'back to main')) }}
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - name: Version or publish
        id: changesets
        uses: changesets/action@v1
        with:
          branch: ${{ github.ref_name }}
          title: 'chore: version packages'
          commit: 'chore: version packages'
          publish: pnpm changeset:publish
          version: pnpm changeset:version
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Automatically open a PR to sync back to main after a publish
      - name: Open PR → main
        if: steps.changesets.outputs.published == 'true'
        run: |
          gh pr create \
            --head "${{ github.ref_name }}" \
            --base main \
            --title "Merge ${{ github.ref_name }} back to main" \
            --body  "Auto‑generated after publishing." \
            --verbose
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_DEBUG: 1
          GH_TRACE: 1

      - name: Notify Devin (Slack)
        if: steps.changesets.outputs.published == 'true'
        env:
          DEVIN_SLACK_WEBHOOK_URL: ${{ secrets.DEVIN_SLACK_WEBHOOK_URL }}
          DEVIN_SLACK_USER_ID: U08M9DKD4MC
          PROMPT_TEXT: |
            ## Task
            Update all **@reown/** dependencies in the **reown-com/secure-appkit** repo to the latest published versions and open a PR.

            ## Inputs
            - Newly published packages (JSON): 
              ${{ steps.changesets.outputs.publishedPackages }}

            ## What to do
            1) Parse the JSON above, build a map of `@reown/*` → `version`.
            2) In **reown-com/secure-appkit**, update `dependencies` and `devDependencies` in `package.json` (and any workspace package.json files if present) where the name starts with `@reown/`, setting to `<version>`.
            3) If nothing changes (already latest), **respond "No secure-appkit update needed."** and stop.
            4) Otherwise: create a branch `chore/reown-deps`, commit with `chore: bump @reown/* to latest`, and open a PR to `main`.
               - PR title: `chore: bump @reown/* to latest`
               - PR body: bullet list of updated packages and versions.

            ## Output
            - Post the PR URL, or the message "No secure-appkit update needed."
        run: |
          MESSAGE_TEXT="<@${DEVIN_SLACK_USER_ID}> ${PROMPT_TEXT}"
          curl -s -X POST -H "Content-Type: application/json" \
            --data "$(jq -n --arg text "$MESSAGE_TEXT" '{text: $text}')" \
            "${DEVIN_SLACK_WEBHOOK_URL}" | grep -qx "ok"
